local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Kai Spiked Hub",
    Icon = 5282615508, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Kai loading",
    LoadingSubtitle = "by Kai",
    Theme = "DarkBlue", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = KaiHub, -- Create a custom folder for your hub/game
       FileName = "Kai Hub"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Spiked",
       Subtitle = "Key System",
       Note = "Key: @tolstozhopik", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"hahahaha1loxloxlox1"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

local plr = game.Players.LocalPlayer
local RunService = game:GetService("RunService")

 local PlayerTab = Window:CreateTab("üè†Menuüè†", nil)
 local ChangerTab = Window:CreateTab("Changer", nil)
 local MiscTab = Window:CreateTab("Misc", nil)
 local CreditTab = Window:CreateTab("üèêCreditüèê", nil) -- Title, Image

 --1--
 local Button = PlayerTab:CreateButton({
   Name = "Data Rollback + Rejoin",
   Callback = function()
      local args = {
         [1] = "DIVE",
         [2] = "Q\255"
     }
     
     game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Functions"):WaitForChild("Keybind"):InvokeServer(unpack(args))
     local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
 
local Rejoin = coroutine.create(function()
    local Success, ErrorMessage = pcall(function()
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end)
 
    if ErrorMessage and not Success then
        warn(ErrorMessage)
    end
end)
 
coroutine.resume(Rejoin)
   end,
})

local Button = PlayerTab:CreateButton({
    Name = "AntiAFK",
    Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/KaiScriptHub/AntiAFK/refs/heads/main/.gitignore", true))()
    end,
 })

 local Button = PlayerTab:CreateButton({
   Name = "InstaSpike",
   Callback = function()
      local spikeEvent = game:GetService("ReplicatedStorage").Mechanics.Spike
      RunService.Heartbeat:Connect(function()

      spikeEvent:FireServer(plr:GetMouse().Hit.LookVector * 1.5, 100, "SPIKE")
      end)
   end,
})

local Button = PlayerTab:CreateButton({
   Name = "Constantly Spike",
   Callback = function()
      local spikeEvent = game:GetService("ReplicatedStorage").Mechanics.Spike
      RunService.Heartbeat:Connect(function()

         spikeEvent:FireServer(plr:GetMouse().Hit.LookVector, 100, "SPIKE")
      end)
   end,
})

 local Button = PlayerTab:CreateButton({
   Name = "Inf Stamina",
   Callback = function()
      game:GetService("Players").LocalPlayer.PlayerScripts.Stamina.Value = 9999999999999
   end,
})

--2--
local Slider = ChangerTab:CreateSlider({
   Name = "Dive length",
   Range = {0, 50},
   Increment = 1,
   Suffix = "DIVELENGTH",
   CurrentValue = 0,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(value)
      plr:SetAttribute("DIVELENGTH", value)
   end,
})

local Slider = ChangerTab:CreateSlider({
   Name = "Floatiness",
   Range = {0, 83.34},
   Increment = 1,
   Suffix = "FLOATINESS",
   CurrentValue = 1,
   Flag = "Slider2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(value)
      plr:SetAttribute("FLOATINESS", value)
   end,
})

local Label = ChangerTab:CreateLabel("Floatiness - —ç—Ç–æ –ø–ª–∞–≤—É—á–µ—Å—Ç—å. –≠—Ç–æ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –≤–ª–∏—è–µ—Ç –∫–∞–∫ –¥–æ–ª–≥–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≤–æ–∑–¥—É—Ö–µ. –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è 5'3 –Ω–æ—Ä–º–∞ 65, –∞ –¥–ª—è 7'0 –Ω–æ—Ä–º–∞ 83.34", 14329995112, Color3.fromRGB(55, 55, 55), false)

--3--
local Button = MiscTab:CreateButton({
   Name = "Remove Court Zones",
   Callback = function()
      local courtA = workspace:FindFirstChild("COURT_A")
      local t1Z = courtA:FindFirstChild("TEAM_1"):FindFirstChild("ZONE")
      local t2Z = courtA:FindFirstChild("TEAM_2"):FindFirstChild("ZONE")
      local walls = courtA:FindFirstChild("WALLS")

      t1Z:Destroy()
      t2Z:Destroy()
      walls:Destroy()
   end,
})


local Label = CreditTab:CreateLabel("Credit: Kai", 14329995112, Color3.fromRGB(55, 55, 55), false) -- Title, Icon, Color, IgnoreTheme
local Label = CreditTab:CreateLabel("Discord: @tolstozhopik", 18810599582, Color3.fromRGB(55, 55, 55), false)
